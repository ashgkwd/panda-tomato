{"version":3,"sources":["Countdown/Display.tsx","Pomodoro/ActionButton.tsx","Pomodoro/StartActions.tsx","Pomodoro/PomodoroRender.tsx","Pomodoro/clockUtils.ts","Pomodoro/useInterval.ts","Pomodoro/tickSound.ts","Pomodoro/useKeyboard.ts","Pomodoro/useClockable.ts","Pomodoro/PomodoroHOC.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Display","minutes","seconds","className","String","padStart","ActionButton","visibility","onClick","label","icon","placement","tip","type","title","size","ghost","StartActions","isReset","isPaused","onToggle","onWorkStart","onBreakStart","PlayCircleOutlined","PomodoroRender","onReset","direction","RollbackOutlined","PauseCircleOutlined","remaining","current","end","a","remainingTotalSeconds","getTime","map","val","Math","max","inFuture","future","Date","setMinutes","getMinutes","getSeconds","useInterval","endsAt","setRemaining","reset","onFinish","interval","useRef","useEffect","window","setInterval","remainingMinutes","remainingSeconds","Audio","play","clearInterval","useKeyboard","setIsPaused","toggle","keyboardShortcutSpace","ev","code","keyboardShortcutOptionR","altKey","addEventListener","removeEventListener","useClockable","useState","setEndsAt","setIsReset","useCallback","startWork","startBreak","PomodoroHOC","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a0b37e0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Displayable } from \"../types/Displayable\";\nimport \"./styles.css\";\n\nfunction Display({ minutes, seconds }: Displayable) {\n  return (\n    <div className=\"pt-display\">\n      <span className=\"pt-minutes\">{minutes}</span> :{\" \"}\n      <span className=\"pt-seconds\">{String(seconds).padStart(2, \"0\")}</span>\n    </div>\n  );\n}\n\nexport default Display;\n","import { Button, Tooltip } from \"antd\";\nimport { Actionable } from \"../types/Actionable\";\n\nfunction ActionButton({\n  visibility,\n  onClick,\n  label,\n  icon,\n  placement,\n  className,\n  tip = \"Spacebar\",\n  type = \"primary\",\n}: Actionable) {\n  return (\n    <Tooltip\n      title={tip}\n      placement={placement}\n      className={`pt-visible-${visibility}`}\n    >\n      <Button\n        size=\"large\"\n        ghost={true}\n        type={type}\n        onClick={onClick}\n        icon={icon}\n        className={className}\n      >\n        {label}\n      </Button>\n    </Tooltip>\n  );\n}\n\nexport default ActionButton;\n","import { PlayCircleOutlined } from \"@ant-design/icons\";\nimport React from \"react\";\nimport { Startable } from \"../types/Startable\";\nimport ActionButton from \"./ActionButton\";\n\nfunction StartActions({\n  isReset,\n  isPaused,\n  onToggle,\n  onWorkStart,\n  onBreakStart,\n}: Startable) {\n  return (\n    <div className=\"pt-start-actions\">\n      <ActionButton\n        placement=\"bottom\"\n        tip=\"Spacebar\"\n        visibility={isReset}\n        onClick={onWorkStart}\n        icon={<PlayCircleOutlined />}\n        className=\"pt-pomodoro-start\"\n        label=\"Start Work\"\n      />\n      <ActionButton\n        placement=\"bottom\"\n        tip=\"⬆Spacebar (Shift Spacebar)\"\n        visibility={isReset}\n        onClick={onBreakStart}\n        icon={<PlayCircleOutlined />}\n        className=\"pt-pomodoro-start\"\n        label=\"Start Break\"\n        type=\"text\"\n      />\n      <ActionButton\n        placement=\"bottom\"\n        tip=\"Spacebar\"\n        visibility={isPaused && !isReset}\n        onClick={onToggle}\n        icon={<PlayCircleOutlined />}\n        className=\"pt-pomodoro-start\"\n        label=\"Start\"\n      />\n    </div>\n  );\n}\n\nexport default StartActions;\n","import { PauseCircleOutlined, RollbackOutlined } from \"@ant-design/icons\";\nimport { Space } from \"antd\";\nimport React from \"react\";\nimport Display from \"../Countdown/Display\";\nimport { Pomodorable } from \"../types/Pomodorable\";\nimport ActionButton from \"./ActionButton\";\nimport StartActions from \"./StartActions\";\nimport \"./styles.css\";\n\nfunction PomodoroRender({\n  onToggle,\n  onWorkStart,\n  onBreakStart,\n  onReset,\n  isPaused,\n  isReset,\n  minutes,\n  seconds,\n}: Pomodorable) {\n  return (\n    <Space direction=\"vertical\" className=\"pt-screen\">\n      <div className=\"pt-action-bar\">\n        <ActionButton\n          placement=\"bottom\"\n          tip=\"⌥R (Alt R)\"\n          visibility={true}\n          onClick={onReset}\n          icon={<RollbackOutlined />}\n          className=\"pt-pomodoro-reset\"\n          label=\"Reset\"\n        />\n      </div>\n      <div className=\"pt-pomodoro\">\n        <ActionButton\n          placement=\"top\"\n          tip=\"Spacebar\"\n          visibility={!isPaused}\n          onClick={onToggle}\n          icon={<PauseCircleOutlined />}\n          className=\"pt-pomodoro-pause\"\n          label=\"Pause\"\n        />\n        <Display minutes={minutes} seconds={seconds} />\n        <StartActions\n          onToggle={onToggle}\n          isReset={isReset}\n          onWorkStart={onWorkStart}\n          onBreakStart={onBreakStart}\n          isPaused={isPaused}\n        />\n      </div>\n    </Space>\n  );\n}\n\nexport default PomodoroRender;\n","export function remaining(current: Date, end: Date) {\n  const remainingTotalSeconds = differenceInSeconds(current, end);\n  const minutes = remainingTotalSeconds / 60;\n  const seconds = remainingTotalSeconds % 60;\n  return [minutes, seconds].map((val) => Math.max(val | 0, 0));\n}\n\nexport function inFuture(\n  minutes: number,\n  seconds: number,\n  future: Date = new Date()\n) {\n  future.setMinutes(\n    future.getMinutes() + minutes,\n    future.getSeconds() + seconds\n  );\n  return future;\n}\n\nexport function differenceInSeconds(a: Date, b: Date) {\n  return (b.getTime() - a.getTime()) / 1000;\n}\n","import { Dispatch, useEffect, useRef } from \"react\";\nimport { Reset } from \"../types/Clockable\";\nimport { remaining } from \"./clockUtils\";\nimport { tickSound } from \"./tickSound\";\n\nfunction useInterval(\n  isPaused: boolean,\n  endsAt: Date,\n  setRemaining: Dispatch<[number, number]>,\n  reset: Reset,\n  onFinish?: () => void\n) {\n  const interval = useRef<number | undefined>();\n\n  useEffect(() => {\n    if (isPaused) return;\n    interval.current = window.setInterval(() => {\n      const current = new Date();\n\n      const [remainingMinutes, remainingSeconds] = remaining(current, endsAt);\n\n      const areLastThreeSeconds =\n        0 < remainingSeconds && remainingSeconds <= 3 && remainingMinutes <= 0;\n      if (areLastThreeSeconds) tickSound();\n\n      const isFinished = remainingMinutes <= 0 && remainingSeconds <= 0;\n      if (isFinished) return onFinish ? onFinish() : reset();\n\n      setRemaining([remainingMinutes, remainingSeconds]);\n    }, 1000);\n\n    return () => clearInterval(interval.current);\n  }, [isPaused, endsAt, setRemaining, onFinish, reset]);\n}\n\nexport default useInterval;\n","export function tickSound() {\n  var sound = new Audio(\n    \"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\"\n  );\n  sound.play();\n}\n","import { Dispatch, useEffect } from \"react\";\nimport { Reset, Toggle } from \"../types/Clockable\";\n\nfunction useKeyboard(\n  isPaused: boolean,\n  setIsPaused: Dispatch<boolean>,\n  toggle: Toggle,\n  reset: Reset\n) {\n  useEffect(() => {\n    const keyboardShortcutSpace = (ev: KeyboardEvent) => {\n      if (ev.code === \"Space\") toggle();\n    };\n\n    const keyboardShortcutOptionR = (ev: KeyboardEvent) => {\n      if (ev.code === \"KeyR\" && ev.altKey) reset();\n    };\n\n    window.addEventListener(\"keypress\", keyboardShortcutSpace, false);\n    window.addEventListener(\"keyup\", keyboardShortcutOptionR, false);\n\n    return () => {\n      window.removeEventListener(\"keypress\", keyboardShortcutSpace, false);\n      window.removeEventListener(\"keyup\", keyboardShortcutOptionR, false);\n    };\n  }, [setIsPaused, isPaused, reset, toggle]);\n}\n\nexport default useKeyboard;\n","import { useCallback, useState } from \"react\";\nimport { Reset, Toggle } from \"../types/Clockable\";\nimport { inFuture, remaining } from \"./clockUtils\";\nimport useInterval from \"./useInterval\";\nimport useKeyboard from \"./useKeyboard\";\n\nfunction useClockable(\n  remainingMinutes: number,\n  remainingSeconds: number,\n  onFinish?: () => void\n) {\n  const [endsAt, setEndsAt] = useState(\n    inFuture(remainingMinutes, remainingSeconds)\n  );\n  const [[minutes, seconds], setRemaining] = useState(\n    remaining(new Date(), endsAt)\n  );\n\n  const [isPaused, setIsPaused] = useState(true);\n  const [isReset, setIsReset] = useState(true);\n\n  const toggle = useCallback<Toggle>(() => {\n    setIsPaused(!isPaused);\n    setIsReset(false);\n  }, [isPaused]);\n\n  const reset = useCallback<Reset>(\n    (minutes = remainingMinutes, seconds = remainingSeconds) => {\n      setIsReset(true);\n      setIsPaused(true);\n\n      setEndsAt(inFuture(minutes, seconds));\n      setRemaining([minutes, seconds]);\n    },\n    [remainingMinutes, remainingSeconds]\n  );\n\n  const startWork = useCallback(() => {\n    reset(25, 0);\n    toggle();\n  }, [reset, toggle]);\n\n  const startBreak = useCallback(() => {\n    reset(5, 0);\n    toggle();\n  }, [reset, toggle]);\n\n  useKeyboard(isPaused, setIsPaused, toggle, reset);\n\n  useInterval(isPaused, endsAt, setRemaining, reset, onFinish);\n\n  return [\n    { minutes, seconds, isPaused, isReset },\n    { toggle, reset: () => reset(), startWork, startBreak },\n  ] as const;\n}\n\nexport default useClockable;\n","import PomodoroRender from \"./PomodoroRender\";\nimport useClockable from \"./useClockable\";\n\nfunction PomodoroHOC() {\n  const [\n    { minutes, seconds, isPaused, isReset },\n    { toggle, reset, startWork, startBreak },\n  ] = useClockable(25, 0);\n\n  return (\n    <PomodoroRender\n      onReset={reset}\n      minutes={minutes}\n      seconds={seconds}\n      onToggle={toggle}\n      isPaused={isPaused}\n      isReset={isReset}\n      onWorkStart={startWork}\n      onBreakStart={startBreak}\n    />\n  );\n}\n\nexport default PomodoroHOC;\n","import React from \"react\";\nimport \"./App.css\";\nimport PomodoroHOC from \"./Pomodoro/PomodoroHOC\";\n\nfunction App() {\n  return <PomodoroHOC />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}